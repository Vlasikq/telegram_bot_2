import requests
from googletrans import Translator
from config_reader import config
from logger import logger

async def fetch_weather(city):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏–∑ OpenWeather API."""
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.weather_api_key}&units=metric"

    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        temp = data.get("main", {}).get("temp")

        if temp is not None:
            logger.info(f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}: {temp}¬∞C")
            return round(temp, 1)
        logger.error(f"‚ö† –û—à–∏–±–∫–∞: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ JSON –¥–ª—è {city}")
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ API OpenWeather: {e}")

    return None

async def fetch_food_calories(query):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø—Ä–æ–¥—É–∫—Ç –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–∞–ª–æ—Ä–∏–∏ –∏–∑ Nutritionix API."""
    translator = Translator()

    try:
        translated_product = await translator.translate(query, src='ru', dest='en')
        translated_product = translated_product.text
        logger.info(f"üì° –ü–µ—Ä–µ–≤–æ–¥: {query} ‚Üí {translated_product}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}")
        return "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞"

    url = "https://trackapi.nutritionix.com/v2/natural/nutrients"
    headers = {
        "x-app-id": config.nutritionix_app_id,
        "x-app-key": config.nutritionix_api_key,
        "Content-Type": "application/json"
    }
    data = {"query": translated_product}

    try:
        response = requests.post(url, json=data, headers=headers)
        response.raise_for_status()
        data = response.json()

        if "foods" in data and len(data["foods"]) > 0:
            calories = data["foods"][0].get("nf_calories", 0)
            logger.info(f"üçè {translated_product}: {calories} –∫–∫–∞–ª")
            return round(calories, 2)
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ API Nutritionix: {e}")

    return "–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
