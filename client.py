import requests
from config_reader import config


import requests
from config_reader import config

import requests
from config_reader import config

def fetch_weather(city):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –≥–æ—Ä–æ–¥–µ —á–µ—Ä–µ–∑ OpenWeatherMap API."""
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.weather_api_key}&units=metric"

    response = requests.get(url)
    print(f"üåç API-–æ—Ç–≤–µ—Ç: {response.status_code}, {response.text}")  # ‚úÖ –õ–æ–≥ API

    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}, {response.text}")  
        return None
    
    try:
        data = response.json()
        

        if "main" in data and "temp" in data["main"]:
            temp = data["main"]["temp"]
            return round(temp, 1)

        print("‚ùå –û—à–∏–±–∫–∞: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ JSON-–æ—Ç–≤–µ—Ç–µ!", data)
        return None

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON: {e}")  
        return None


def fetch_food_calories(product_name):
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–∑ Nutritionix API."""
    url = "https://trackapi.nutritionix.com/v2/natural/nutrients"
    headers = {
        "x-app-id": config.nutritionix_app_id,
        "x-app-key": config.nutritionix_api_key,
        "Content-Type": "application/json"
    }
    data = {"query": product_name}
    response = requests.post(url, json=data, headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        if "foods" in data and len(data["foods"]) > 0:
            return data["foods"][0].get("nf_calories", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    return "–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
